"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/context/tracking-context.tsx":
/*!******************************************!*\
  !*** ./app/context/tracking-context.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TrackingProvider: function() { return /* binding */ TrackingProvider; },\n/* harmony export */   useUserTracking: function() { return /* binding */ useUserTracking; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* __next_internal_client_entry_do_not_use__ TrackingProvider,useUserTracking auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst TrackingContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst TrackingProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [trackingData, setTrackingData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [events, setEvents] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Referencias para tracking (UNA SOLA INSTANCIA)\n    const startTime = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(Date.now());\n    const totalActiveTime = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const lastActivityTime = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(Date.now());\n    const isActive = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(true);\n    const sessionId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(\"\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9)));\n    const visitUid = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(\"visit_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 15)));\n    const mouseMovementCount = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const clickCount = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const scrollDepth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const pageViews = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(1);\n    const isSending = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const isInitialized = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false) // Evitar múltiples inicializaciones\n    ;\n    const hasSentBeforeUnload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false) // Evitar envíos duplicados en beforeunload\n    ;\n    const hasSentInitTracking = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false) // Evitar envíos duplicados de init tracking\n    ;\n    // Función para obtener IP\n    const getIPAddress = async ()=>{\n        try {\n            const response = await fetch(\"https://api.ipify.org?format=json\");\n            const data = await response.json();\n            return data.ip;\n        } catch (error) {\n            console.warn(\"No se pudo obtener la IP:\", error);\n            return undefined;\n        }\n    };\n    // Función para obtener la localidad a partir de la IP usando ipinfo.io\n    const getLocalidad = async ()=>{\n        try {\n            const response = await fetch(\"https://ipinfo.io/json\");\n            const data = await response.json();\n            return data.city;\n        } catch (error) {\n            console.warn(\"No se pudo obtener la localidad:\", error);\n            return undefined;\n        }\n    };\n    // Función para obtener información de conexión\n    const getConnectionInfo = ()=>{\n        if (\"connection\" in navigator) {\n            const connection = navigator.connection;\n            return {\n                connectionType: connection.effectiveType || connection.type,\n                effectiveType: connection.effectiveType,\n                downlink: connection.downlink,\n                rtt: connection.rtt\n            };\n        }\n        return {};\n    };\n    // Función para detectar dispositivo\n    const getDeviceInfo = ()=>{\n        const userAgent = navigator.userAgent;\n        const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n        const isTablet = /iPad|Android(?=.*\\bMobile\\b)(?=.*\\bSafari\\b)/i.test(userAgent);\n        const isDesktop = !isMobile && !isTablet;\n        return {\n            isMobile,\n            isTablet,\n            isDesktop,\n            touchSupport: \"ontouchstart\" in window\n        };\n    };\n    // Función para obtener datos completos de tracking\n    const getTrackingData = async ()=>{\n        const ipAddress = await getIPAddress();\n        return {\n            // UID único de la visita\n            visitUid: visitUid.current,\n            // Información del navegador\n            userAgent: navigator.userAgent,\n            language: navigator.language,\n            platform: navigator.platform,\n            cookieEnabled: navigator.cookieEnabled,\n            doNotTrack: navigator.doNotTrack,\n            // Información de la pantalla\n            screenWidth: window.screen.width,\n            screenHeight: window.screen.height,\n            viewportWidth: window.innerWidth,\n            viewportHeight: window.innerHeight,\n            colorDepth: window.screen.colorDepth,\n            pixelRatio: window.devicePixelRatio,\n            // Información de la conexión\n            ...getConnectionInfo(),\n            // Información de ubicación\n            ipAddress,\n            city: await getLocalidad(),\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n            // Información de tiempo\n            sessionStartTime: startTime.current,\n            totalActiveTime: isActive.current ? totalActiveTime.current + (Date.now() - lastActivityTime.current) : totalActiveTime.current,\n            lastActivityTime: lastActivityTime.current,\n            // Información de interacciones\n            pageViews: pageViews.current,\n            clicks: clickCount.current,\n            scrollDepth: scrollDepth.current,\n            mouseMovements: mouseMovementCount.current,\n            // Información de la página\n            referrer: document.referrer,\n            currentUrl: window.location.href,\n            // Información del dispositivo\n            ...getDeviceInfo(),\n            // Información adicional\n            sessionId: sessionId.current,\n            timestamp: Date.now()\n        };\n    };\n    // Función para enviar datos de tracking\n    const sendTrackingData = async ()=>{\n        // Evitar llamadas duplicadas\n        if (isSending.current) {\n            console.log(\"Ya hay una llamada de tracking en progreso, saltando...\");\n            return;\n        }\n        try {\n            isSending.current = true;\n            hasSentBeforeUnload.current = true // Marcar que ya se envió\n            ;\n            // Resetear el flag después de 5 segundos\n            setTimeout(()=>{\n                hasSentBeforeUnload.current = false;\n                console.log(\"Flag hasSentBeforeUnload reseteado\");\n            }, 5000);\n            const data = await getTrackingData();\n            const endpoint = \"http://localhost:3003/send-event\";\n            const accessToken = \"EAAOHUgAkJWEBPHk7PAlWlSFEaIW3UBDhGn87Q6DipWvRt0gXptWxF0N9bqEvGdayqRiC3OClsQbztOXhQhk4vXTXfNv12vFE2yQfeQii5CEGXkmgpZCeG1dwKYq83anh4zvUHMrXnqhILBZBbDDkzsfy2s8eD0ZBz8gL1oy60rfzpaC7CeT8Gq9EkQ4luk6OQZDZD\";\n            const pixelId = \"1374845580367644\";\n            if (!endpoint) {\n                throw new Error(\"Endpoint no configurado\");\n            }\n            if (!accessToken) {\n                throw new Error(\"Access Token no configurado\");\n            }\n            if (!pixelId) {\n                throw new Error(\"Pixel ID no configurado\");\n            }\n            const payload = {\n                trackingData: data,\n                events: events,\n                access_token: accessToken,\n                pixel_id: pixelId\n            };\n            const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"\".concat(endpoint, \"/tracking\"), payload, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                timeout: 10000\n            });\n            console.log(\"Datos de tracking enviados exitosamente:\", response.data);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error enviando datos de tracking:\", error);\n            // Fallback: guardar en localStorage\n            saveToLocalStorage();\n            throw error;\n        } finally{\n            isSending.current = false;\n        }\n    };\n    // Función para guardar en localStorage como fallback\n    const saveToLocalStorage = ()=>{\n        try {\n            getTrackingData().then((trackingData)=>{\n                const existingData = localStorage.getItem(\"trackingData\");\n                const data = existingData ? JSON.parse(existingData) : [];\n                data.push({\n                    trackingData,\n                    events,\n                    timestamp: Date.now()\n                });\n                localStorage.setItem(\"trackingData\", JSON.stringify(data));\n            });\n        } catch (error) {\n            console.error(\"Error guardando en localStorage:\", error);\n        }\n    };\n    // Función para enviar init tracking\n    const sendInitTracking = async ()=>{\n        // Evitar envíos duplicados\n        if (hasSentInitTracking.current) {\n            console.log(\"Init tracking ya fue enviado, saltando...\");\n            return;\n        }\n        try {\n            hasSentInitTracking.current = true;\n            const endpoint = \"http://localhost:3003/send-event\";\n            const accessToken = \"EAAOHUgAkJWEBPHk7PAlWlSFEaIW3UBDhGn87Q6DipWvRt0gXptWxF0N9bqEvGdayqRiC3OClsQbztOXhQhk4vXTXfNv12vFE2yQfeQii5CEGXkmgpZCeG1dwKYq83anh4zvUHMrXnqhILBZBbDDkzsfy2s8eD0ZBz8gL1oy60rfzpaC7CeT8Gq9EkQ4luk6OQZDZD\";\n            const pixelId = \"1374845580367644\";\n            if (!endpoint) {\n                throw new Error(\"Endpoint no configurado\");\n            }\n            const payload = {\n                visitUid: visitUid.current,\n                sessionId: sessionId.current,\n                page_id: pixelId || null,\n                timestamp: Date.now(),\n                access_token: accessToken || null,\n                pixel_id: pixelId || null\n            };\n            const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"\".concat(endpoint, \"/init-tracking\"), payload, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                timeout: 10000\n            });\n            console.log(\"Init tracking enviado exitosamente:\", response.data);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error enviando init tracking:\", error);\n            // Fallback: guardar en localStorage\n            saveInitToLocalStorage();\n            throw error;\n        }\n    };\n    // Función para guardar init tracking en localStorage como fallback\n    const saveInitToLocalStorage = ()=>{\n        try {\n            const accessToken = \"EAAOHUgAkJWEBPHk7PAlWlSFEaIW3UBDhGn87Q6DipWvRt0gXptWxF0N9bqEvGdayqRiC3OClsQbztOXhQhk4vXTXfNv12vFE2yQfeQii5CEGXkmgpZCeG1dwKYq83anh4zvUHMrXnqhILBZBbDDkzsfy2s8eD0ZBz8gL1oy60rfzpaC7CeT8Gq9EkQ4luk6OQZDZD\";\n            const pixelId = \"1374845580367644\";\n            const initData = {\n                visitUid: visitUid.current,\n                sessionId: sessionId.current,\n                page_id: pixelId || null,\n                timestamp: Date.now(),\n                access_token: accessToken || null,\n                pixel_id: pixelId || null\n            };\n            const existingData = localStorage.getItem(\"initTrackingData\");\n            const data = existingData ? JSON.parse(existingData) : [];\n            data.push({\n                ...initData,\n                created_at: new Date().toISOString()\n            });\n            localStorage.setItem(\"initTrackingData\", JSON.stringify(data));\n            console.log(\"Init tracking guardado en localStorage como fallback\");\n        } catch (error) {\n            console.error(\"Error guardando init tracking en localStorage:\", error);\n        }\n    };\n    // Función para agregar evento\n    const addEvent = function(type) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const event = {\n            type,\n            data,\n            timestamp: Date.now(),\n            visitUid: visitUid.current\n        };\n        setEvents((prev)=>[\n                ...prev,\n                event\n            ]);\n    };\n    // Función para incrementar page views\n    const incrementPageViews = ()=>{\n        pageViews.current++;\n    };\n    // Función para obtener session ID\n    const getSessionId = ()=>{\n        return sessionId.current;\n    };\n    // Función para obtener visit UID\n    const getVisitUid = ()=>{\n        return visitUid.current;\n    };\n    // Función para obtener eventos\n    const getEvents = ()=>{\n        return events;\n    };\n    // Timer functions\n    const startTimer = ()=>{\n        if (!isActive.current) {\n            isActive.current = true;\n            lastActivityTime.current = Date.now();\n        }\n    };\n    const stopTimer = ()=>{\n        if (isActive.current) {\n            totalActiveTime.current += Date.now() - lastActivityTime.current;\n            isActive.current = false;\n        }\n    };\n    // Update scroll depth\n    const updateScrollDepth = ()=>{\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        const docHeight = document.documentElement.scrollHeight - window.innerHeight;\n        const scrollPercent = scrollTop / docHeight * 100;\n        scrollDepth.current = Math.max(scrollDepth.current, scrollPercent);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Evitar múltiples inicializaciones\n        if (isInitialized.current) {\n            return;\n        }\n        isInitialized.current = true;\n        console.log(\"Inicializando Tracking Provider...\");\n        // Enviar init tracking inmediatamente cuando el usuario entra\n        sendInitTracking().catch((error)=>{\n            console.error(\"Error en init tracking:\", error);\n        });\n        // Obtener datos iniciales\n        getTrackingData().then(setTrackingData);\n        // Timer events\n        const handleFocus = ()=>{\n            startTimer();\n            addEvent(\"focus\");\n        };\n        const handleBlur = ()=>{\n            stopTimer();\n            addEvent(\"blur\");\n        };\n        const handleVisibilityChange = ()=>{\n            if (document.visibilityState === \"hidden\") {\n                stopTimer();\n            } else {\n                startTimer();\n            }\n        };\n        // Scroll tracking\n        let scrollTimeout;\n        const handleScroll = ()=>{\n            updateScrollDepth();\n            clearTimeout(scrollTimeout);\n            scrollTimeout = setTimeout(()=>{\n                addEvent(\"scroll\", {\n                    scrollDepth: scrollDepth.current\n                });\n            }, 100);\n        };\n        // Click tracking\n        const handleClick = ()=>{\n            clickCount.current++;\n            addEvent(\"click\", {\n                clicks: clickCount.current\n            });\n        };\n        // Mouse movement tracking (throttled)\n        let mouseTimeout;\n        const handleMouseMove = ()=>{\n            mouseMovementCount.current++;\n            clearTimeout(mouseTimeout);\n            mouseTimeout = setTimeout(()=>{\n                if (mouseMovementCount.current % 10 === 0) {\n                    addEvent(\"scroll\", {\n                        mouseMovements: mouseMovementCount.current\n                    });\n                }\n            }, 1000);\n        };\n        // Before unload\n        const handleBeforeUnload = ()=>{\n            stopTimer();\n            // Solo enviar si no se está enviando ya Y no se ha enviado recientemente\n            if (!isSending.current && !hasSentBeforeUnload.current) {\n                console.log(\"Enviando tracking data en beforeunload...\");\n                sendTrackingData();\n            } else {\n                console.log(\"Saltando env\\xedo en beforeunload (ya se envi\\xf3 recientemente)\");\n            }\n        };\n        // Page load time\n        const handleLoad = ()=>{\n            if (window.performance && window.performance.timing) {\n                const loadTime = window.performance.timing.loadEventEnd - window.performance.timing.navigationStart;\n                addEvent(\"page_view\", {\n                    pageLoadTime: loadTime\n                });\n            }\n        };\n        // Event listeners\n        window.addEventListener(\"focus\", handleFocus);\n        window.addEventListener(\"blur\", handleBlur);\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n        window.addEventListener(\"scroll\", handleScroll);\n        window.addEventListener(\"click\", handleClick);\n        window.addEventListener(\"mousemove\", handleMouseMove);\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\n        window.addEventListener(\"load\", handleLoad);\n        // Actualizar datos cada 30 segundos\n        const interval = setInterval(async ()=>{\n            const data = await getTrackingData();\n            setTrackingData(data);\n        }, 30000);\n        return ()=>{\n            console.log(\"Limpiando Tracking Provider...\");\n            clearInterval(interval);\n            window.removeEventListener(\"focus\", handleFocus);\n            window.removeEventListener(\"blur\", handleBlur);\n            document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n            window.removeEventListener(\"scroll\", handleScroll);\n            window.removeEventListener(\"click\", handleClick);\n            window.removeEventListener(\"mousemove\", handleMouseMove);\n            window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n            window.removeEventListener(\"load\", handleLoad);\n            // Solo enviar datos al desmontar si no se está enviando ya Y no se ha enviado recientemente\n            if (!isSending.current && !hasSentBeforeUnload.current) {\n                console.log(\"Enviando tracking data en cleanup...\");\n                sendTrackingData();\n            } else {\n                console.log(\"Saltando env\\xedo en cleanup (ya se envi\\xf3 recientemente)\");\n            }\n        };\n    }, []);\n    const value = {\n        trackingData,\n        sendTrackingData,\n        sendInitTracking,\n        incrementPageViews,\n        getSessionId,\n        getVisitUid,\n        getEvents\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TrackingContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/ramiroatlantic/Desktop/CROSSUP/landings-lautaro/landings-RA/landing-seven/app/context/tracking-context.tsx\",\n        lineNumber: 551,\n        columnNumber: 5\n    }, undefined);\n};\n_s(TrackingProvider, \"rH73X92pGi31FhzghGEXGWqljO0=\");\n_c = TrackingProvider;\n// Hook simplificado que usa el context\nconst useUserTracking = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TrackingContext);\n    if (context === undefined) {\n        throw new Error(\"useUserTracking debe ser usado dentro de TrackingProvider\");\n    }\n    return context;\n};\n_s1(useUserTracking, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TrackingProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/context/tracking-context.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./services/metaEventService.ts":
/*!**************************************!*\
  !*** ./services/metaEventService.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendMetaEvent: function() { return /* binding */ sendMetaEvent; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nasync function sendMetaEvent(email) {\n    let value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"10\";\n    console.log(\"\\uD83D\\uDE80 Iniciando env\\xedo de evento a Meta...\");\n    console.log(\"\\uD83D\\uDCE7 Email:\", email);\n    console.log(\"\\uD83D\\uDCB0 Valor:\", value);\n    try {\n        const eventData = {\n            event_name: \"Purchase\",\n            event_time: Math.floor(Date.now() / 1000),\n            action_source: \"website\",\n            user_data: {\n                em: [\n                    \"7b17fb0bd173f625b58636fb796407c22b3d16fc78302d79f0fd30c2fc2fc068\"\n                ]\n            },\n            custom_data: {\n                currency: \"USD\",\n                value: value\n            }\n        };\n        console.log(\"\\uD83D\\uDCCA Event data preparado:\", eventData);\n        const accessToken = \"EAAOHUgAkJWEBPHk7PAlWlSFEaIW3UBDhGn87Q6DipWvRt0gXptWxF0N9bqEvGdayqRiC3OClsQbztOXhQhk4vXTXfNv12vFE2yQfeQii5CEGXkmgpZCeG1dwKYq83anh4zvUHMrXnqhILBZBbDDkzsfy2s8eD0ZBz8gL1oy60rfzpaC7CeT8Gq9EkQ4luk6OQZDZD\";\n        const pixelId = \"1374845580367644\";\n        const endpoint = \"http://localhost:3003/send-event\";\n        console.log(\"\\uD83D\\uDD27 Variables de entorno:\");\n        console.log(\"  - Endpoint:\", endpoint ? \"✅ Configurado\" : \"❌ No configurado\");\n        console.log(\"  - Access Token:\", accessToken ? \"✅ Configurado\" : \"❌ No configurado\");\n        console.log(\"  - Pixel ID:\", pixelId ? \"✅ Configurado\" : \"❌ No configurado\");\n        if (!endpoint) {\n            throw new Error(\"Endpoint no configurado\");\n        }\n        if (!accessToken) {\n            throw new Error(\"Access Token no configurado\");\n        }\n        if (!pixelId) {\n            throw new Error(\"Pixel ID no configurado\");\n        }\n        const payload = {\n            eventData,\n            accessToken,\n            pixelId\n        };\n        console.log(\"\\uD83D\\uDCE4 Enviando payload a:\", endpoint);\n        console.log(\"\\uD83D\\uDCE6 Payload:\", JSON.stringify(payload, null, 2));\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(endpoint, payload, {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            timeout: 10000\n        });\n        console.log(\"✅ Evento enviado exitosamente:\", response.data);\n        return true;\n    } catch (error) {\n        var _error_response, _error_response1;\n        console.error(\"❌ Error enviando evento a Meta:\");\n        console.error(\"  - Tipo de error:\", error.name);\n        console.error(\"  - Mensaje:\", error.message);\n        console.error(\"  - Response status:\", (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status);\n        console.error(\"  - Response data:\", (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.data);\n        console.error(\"  - Stack:\", error.stack);\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL21ldGFFdmVudFNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEI7QUFlbkIsZUFBZUMsY0FBY0MsS0FBYTtRQUFFQyxRQUFBQSxpRUFBZ0I7SUFDakVDLFFBQVFDLEdBQUcsQ0FBQztJQUNaRCxRQUFRQyxHQUFHLENBQUMsdUJBQWFIO0lBQ3pCRSxRQUFRQyxHQUFHLENBQUMsdUJBQWFGO0lBRXpCLElBQUk7UUFDRixNQUFNRyxZQUEyQjtZQUMvQkMsWUFBWTtZQUNaQyxZQUFZQyxLQUFLQyxLQUFLLENBQUNDLEtBQUtDLEdBQUcsS0FBSztZQUNwQ0MsZUFBZTtZQUNmQyxXQUFXO2dCQUNUQyxJQUFJO29CQUFDO2lCQUFtRTtZQUMxRTtZQUNBQyxhQUFhO2dCQUNYQyxVQUFVO2dCQUNWZCxPQUFPQTtZQUNUO1FBQ0Y7UUFFQUMsUUFBUUMsR0FBRyxDQUFDLHNDQUE0QkM7UUFFeEMsTUFBTVksY0FBY0Msd01BQXlDO1FBQzdELE1BQU1HLFVBQVVILGtCQUFxQztRQUNyRCxNQUFNSyxXQUFXTCxrQ0FBb0M7UUFFckRmLFFBQVFDLEdBQUcsQ0FBQztRQUNaRCxRQUFRQyxHQUFHLENBQUMsaUJBQWlCbUIsV0FBVyxrQkFBa0I7UUFDMURwQixRQUFRQyxHQUFHLENBQUMscUJBQXFCYSxjQUFjLGtCQUFrQjtRQUNqRWQsUUFBUUMsR0FBRyxDQUFDLGlCQUFpQmlCLFVBQVUsa0JBQWtCO1FBRXpELElBQUksQ0FBQ0UsVUFBVTtZQUNiLE1BQU0sSUFBSUUsTUFBTTtRQUNsQjtRQUVBLElBQUksQ0FBQ1IsYUFBYTtZQUNoQixNQUFNLElBQUlRLE1BQU07UUFDbEI7UUFFQSxJQUFJLENBQUNKLFNBQVM7WUFDWixNQUFNLElBQUlJLE1BQU07UUFDbEI7UUFFQSxNQUFNQyxVQUFVO1lBQ2RyQjtZQUNBWTtZQUNBSTtRQUNGO1FBRUFsQixRQUFRQyxHQUFHLENBQUMsb0NBQTBCbUI7UUFDdENwQixRQUFRQyxHQUFHLENBQUMseUJBQWV1QixLQUFLQyxTQUFTLENBQUNGLFNBQVMsTUFBTTtRQUV6RCxNQUFNRyxXQUFXLE1BQU05Qiw2Q0FBS0EsQ0FBQytCLElBQUksQ0FBQ1AsVUFBVUcsU0FBUztZQUNuREssU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsU0FBUztRQUNYO1FBRUE3QixRQUFRQyxHQUFHLENBQUMsa0NBQWtDeUIsU0FBU0ksSUFBSTtRQUMzRCxPQUFPO0lBQ1QsRUFBRSxPQUFPQyxPQUFZO1lBSW1CQSxpQkFDRkE7UUFKcEMvQixRQUFRK0IsS0FBSyxDQUFDO1FBQ2QvQixRQUFRK0IsS0FBSyxDQUFDLHNCQUFzQkEsTUFBTUMsSUFBSTtRQUM5Q2hDLFFBQVErQixLQUFLLENBQUMsZ0JBQWdCQSxNQUFNRSxPQUFPO1FBQzNDakMsUUFBUStCLEtBQUssQ0FBQyx5QkFBd0JBLGtCQUFBQSxNQUFNTCxRQUFRLGNBQWRLLHNDQUFBQSxnQkFBZ0JHLE1BQU07UUFDNURsQyxRQUFRK0IsS0FBSyxDQUFDLHVCQUFzQkEsbUJBQUFBLE1BQU1MLFFBQVEsY0FBZEssdUNBQUFBLGlCQUFnQkQsSUFBSTtRQUN4RDlCLFFBQVErQixLQUFLLENBQUMsY0FBY0EsTUFBTUksS0FBSztRQUN2QyxPQUFPO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zZXJ2aWNlcy9tZXRhRXZlbnRTZXJ2aWNlLnRzP2FiYTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuaW50ZXJmYWNlIE1ldGFFdmVudERhdGEge1xuICBldmVudF9uYW1lOiBzdHJpbmc7XG4gIGV2ZW50X3RpbWU6IG51bWJlcjtcbiAgYWN0aW9uX3NvdXJjZTogc3RyaW5nO1xuICB1c2VyX2RhdGE6IHtcbiAgICBlbTogc3RyaW5nW107XG4gIH07XG4gIGN1c3RvbV9kYXRhOiB7XG4gICAgY3VycmVuY3k6IHN0cmluZztcbiAgICB2YWx1ZTogc3RyaW5nO1xuICB9O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZE1ldGFFdmVudChlbWFpbDogc3RyaW5nLCB2YWx1ZTogc3RyaW5nID0gXCIxMFwiKTogUHJvbWlzZTxib29sZWFuPiB7XG4gIGNvbnNvbGUubG9nKCfwn5qAIEluaWNpYW5kbyBlbnbDrW8gZGUgZXZlbnRvIGEgTWV0YS4uLicpO1xuICBjb25zb2xlLmxvZygn8J+TpyBFbWFpbDonLCBlbWFpbCk7XG4gIGNvbnNvbGUubG9nKCfwn5KwIFZhbG9yOicsIHZhbHVlKTtcbiAgXG4gIHRyeSB7XG4gICAgY29uc3QgZXZlbnREYXRhOiBNZXRhRXZlbnREYXRhID0ge1xuICAgICAgZXZlbnRfbmFtZTogXCJQdXJjaGFzZVwiLFxuICAgICAgZXZlbnRfdGltZTogTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCksXG4gICAgICBhY3Rpb25fc291cmNlOiBcIndlYnNpdGVcIixcbiAgICAgIHVzZXJfZGF0YToge1xuICAgICAgICBlbTogW1wiN2IxN2ZiMGJkMTczZjYyNWI1ODYzNmZiNzk2NDA3YzIyYjNkMTZmYzc4MzAyZDc5ZjBmZDMwYzJmYzJmYzA2OFwiXVxuICAgICAgfSxcbiAgICAgIGN1c3RvbV9kYXRhOiB7XG4gICAgICAgIGN1cnJlbmN5OiBcIlVTRFwiLFxuICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc29sZS5sb2coJ/Cfk4ogRXZlbnQgZGF0YSBwcmVwYXJhZG86JywgZXZlbnREYXRhKTtcblxuICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfTUVUQV9BQ0NFU1NfVE9LRU47XG4gICAgY29uc3QgcGl4ZWxJZCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX01FVEFfUElYRUxfSUQ7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfRU5EUE9JTlQ7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CflKcgVmFyaWFibGVzIGRlIGVudG9ybm86Jyk7XG4gICAgY29uc29sZS5sb2coJyAgLSBFbmRwb2ludDonLCBlbmRwb2ludCA/ICfinIUgQ29uZmlndXJhZG8nIDogJ+KdjCBObyBjb25maWd1cmFkbycpO1xuICAgIGNvbnNvbGUubG9nKCcgIC0gQWNjZXNzIFRva2VuOicsIGFjY2Vzc1Rva2VuID8gJ+KchSBDb25maWd1cmFkbycgOiAn4p2MIE5vIGNvbmZpZ3VyYWRvJyk7XG4gICAgY29uc29sZS5sb2coJyAgLSBQaXhlbCBJRDonLCBwaXhlbElkID8gJ+KchSBDb25maWd1cmFkbycgOiAn4p2MIE5vIGNvbmZpZ3VyYWRvJyk7XG4gICAgXG4gICAgaWYgKCFlbmRwb2ludCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFbmRwb2ludCBubyBjb25maWd1cmFkbycpO1xuICAgIH1cblxuICAgIGlmICghYWNjZXNzVG9rZW4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWNjZXNzIFRva2VuIG5vIGNvbmZpZ3VyYWRvJyk7XG4gICAgfVxuXG4gICAgaWYgKCFwaXhlbElkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BpeGVsIElEIG5vIGNvbmZpZ3VyYWRvJyk7XG4gICAgfVxuXG4gICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgIGV2ZW50RGF0YSxcbiAgICAgIGFjY2Vzc1Rva2VuLFxuICAgICAgcGl4ZWxJZFxuICAgIH07XG5cbiAgICBjb25zb2xlLmxvZygn8J+TpCBFbnZpYW5kbyBwYXlsb2FkIGE6JywgZW5kcG9pbnQpO1xuICAgIGNvbnNvbGUubG9nKCfwn5OmIFBheWxvYWQ6JywgSlNPTi5zdHJpbmdpZnkocGF5bG9hZCwgbnVsbCwgMikpO1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KGVuZHBvaW50LCBwYXlsb2FkLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICB9LFxuICAgICAgdGltZW91dDogMTAwMDBcbiAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKCfinIUgRXZlbnRvIGVudmlhZG8gZXhpdG9zYW1lbnRlOicsIHJlc3BvbnNlLmRhdGEpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGVudmlhbmRvIGV2ZW50byBhIE1ldGE6Jyk7XG4gICAgY29uc29sZS5lcnJvcignICAtIFRpcG8gZGUgZXJyb3I6JywgZXJyb3IubmFtZSk7XG4gICAgY29uc29sZS5lcnJvcignICAtIE1lbnNhamU6JywgZXJyb3IubWVzc2FnZSk7XG4gICAgY29uc29sZS5lcnJvcignICAtIFJlc3BvbnNlIHN0YXR1czonLCBlcnJvci5yZXNwb25zZT8uc3RhdHVzKTtcbiAgICBjb25zb2xlLmVycm9yKCcgIC0gUmVzcG9uc2UgZGF0YTonLCBlcnJvci5yZXNwb25zZT8uZGF0YSk7XG4gICAgY29uc29sZS5lcnJvcignICAtIFN0YWNrOicsIGVycm9yLnN0YWNrKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0gIl0sIm5hbWVzIjpbImF4aW9zIiwic2VuZE1ldGFFdmVudCIsImVtYWlsIiwidmFsdWUiLCJjb25zb2xlIiwibG9nIiwiZXZlbnREYXRhIiwiZXZlbnRfbmFtZSIsImV2ZW50X3RpbWUiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwiYWN0aW9uX3NvdXJjZSIsInVzZXJfZGF0YSIsImVtIiwiY3VzdG9tX2RhdGEiLCJjdXJyZW5jeSIsImFjY2Vzc1Rva2VuIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX01FVEFfQUNDRVNTX1RPS0VOIiwicGl4ZWxJZCIsIk5FWFRfUFVCTElDX01FVEFfUElYRUxfSUQiLCJlbmRwb2ludCIsIk5FWFRfUFVCTElDX0FQSV9FTkRQT0lOVCIsIkVycm9yIiwicGF5bG9hZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXNwb25zZSIsInBvc3QiLCJoZWFkZXJzIiwidGltZW91dCIsImRhdGEiLCJlcnJvciIsIm5hbWUiLCJtZXNzYWdlIiwic3RhdHVzIiwic3RhY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/metaEventService.ts\n"));

/***/ })

});